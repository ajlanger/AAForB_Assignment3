{"title_page": "Software protection dongle", "text_new": "{{more citations needed|date=March 2008}}\n\nA '''software protection dongle''' (commonly known as a '''dongle''' or '''key''') is an electronic [[copy protection]] and content protection device. When connected to a computer or other electronics, they unlock software functionality or decode [[Content (media)|content]].<ref>{{cite book |last1=Amos |first1=S. W. |last2=Amos |first2=Roger S. |title=Newnes Dictionary of Electronics |url=https://archive.org/details/newnesdictionary0000amos_o3q0 |url-access=registration |accessdate=4 July 2013 |year=2002 |edition=4th |publisher=[[Newnes Press]] |isbn=0750643315 |oclc=144646016 |page=[https://archive.org/details/newnesdictionary0000amos_o3q0/page/152 152]}}</ref> The hardware key is programmed with a [[product key]] or other cryptographic protection mechanism and functions via an electrical connector to an [[external bus]] of the computer or appliance.<ref>{{cite book |last=Stobbs |first=Gregory A. |title=Software Patents |edition=Third |url=https://books.google.com/books?id=Rn1vZWqSuNYC&pg=SA2-PA90 |accessdate=4 July 2013 |year=2012 |publisher=[[Wolters Kluwer]] |isbn=9781454811978 |oclc=802867781 |pages=2\u201390}}</ref>\n\nIn software protection, dongles are two-interface security tokens with transient data flow with a pull communication that reads security data from the dongle. In the absence of these dongles, certain software may run only in a restricted mode, or not at all. Apart from software protection, dongles can enable functions in electronic devices, such as receiving and processing encoded video streams on television sets.\n[[File:Hasp4 lpt dongle.jpg|thumb|HASP key dongle for LPT port]]\n\n==History==\nThe Merriam-Webster dictionary states that the \"First known use of dongle\" was in 1981 and that the etymology was \"perhaps alteration of dangle.\"<ref>{{cite web |title=Dongle |url=https://www.merriam-webster.com/dictionary/dongle |publisher=Merriam-Webster |accessdate=11 June 2019}}</ref>\n\n[[File:Parallel-Port-Dongle-Front.jpg|thumb|A Rainbow Tech parallel port dongle PCB, front side. Note the numbers rubbed off the chips to make reverse engineering harder]]\n\n[[File:Parallel-Port-Dongle-Back.jpg|thumb|A Rainbow Tech parallel port dongle PCB, back side]]\n\nDongles rapidly evolved into active devices that contained a serial transceiver ([[Universal asynchronous receiver/transmitter|UART]]) and even a [[microprocessor]] to handle transactions with the host. Later versions adopted the [[Universal Serial Bus|USB]] interface, which became the preferred choice over the [[serial port|serial]] or parallel interface.\n\nA 1992 advertisement for [[Rainbow Technologies]] claimed the word dongle was derived from the name \"Don Gall\". Though untrue, this has given rise to an [[urban myth]].<ref>[https://archive.org/details/byte-magazine-1992-08 Sentinel advert], ''Byte'' Magazine, p. 33</ref>\n\n===Usage===\n[[Image:Parallel-port-dongle.jpg|thumb|[[Daisy chain (electrical engineering)|Daisy chained]] parallel port copy protection dongles.]]\nEfforts to introduce dongle copy-protection in the mainstream software market have met stiff resistance from users. Such copy-protection is more typically used with very expensive packages and [[vertical market]] software such as [[Computer-aided design|CAD]]/[[Computer-aided manufacturing|CAM]] software, [[JTAG|cellphone flasher/JTAG debugger software]], [[MICROS Systems]] hospitality and special retail software, [[Digital Audio Workstation]] applications, and some [[translation memory]] packages.\n\nIn cases such as prepress and printing software, the dongle is encoded with a specific, per-user license key, which enables particular features in the target application. This is a form of tightly controlled licensing, which allows the vendor to engage in vendor lock-in and charge more than it would otherwise for the product. An example is the way [[Kodak]] licenses [[Prinergy]] to customers: When a computer-to-plate output device is sold to a customer, Prinergy's own license cost is provided separately to the customer, and the base price contains little more than the required licenses to output work to the device.\n\nUSB dongles are also a big part of [[Steinberg]]'s audio production and editing systems, such as [[Steinberg Cubase|Cubase]], WaveLab, [[Steinberg Hypersonic|Hypersonic]], [[HALion]], and others. The dongle used by Steinberg's products is also known as a Steinberg Key. The Steinberg Key can be purchased separately from its counterpart applications and generally comes bundled with the \"Syncrosoft License Control Center\" application, which is cross-platform compatible with both Mac OS X and Windows.\n\nSome software developers use traditional USB flash drives as software license dongles that contain hardware serial numbers in conjunction with the stored device ID strings, which are generally not easily changed by an end-user. A developer can also use the dongle to store user settings or even a complete \"portable\" version of the application. Not all flash drives are suitable for this use, as not all manufacturers install unique serial numbers into their devices.\n\nAlthough such medium security may deter a casual hacker, the lack of a processor core in the dongle to authenticate data, perform encryption/decryption, and execute inaccessible binary code makes such a passive dongle inappropriate for all but the lowest-priced software.  A simpler and even less secure option is to use unpartitioned or unallocated storage in the dongle to store license data. Common USB flash drives are relatively inexpensive compared to dedicated security dongle devices, but reading and storing data in a flash drive are easy to intercept, alter, and bypass.\n\n===Issues===\nThere are potential weaknesses in the implementation of the protocol between the dongle and the copy-controlled software. It requires considerable cunning to make this hard to [[Software cracking|crack]]. For example, a simple implementation might define a [[subprogram|function]] to check for the dongle's presence, returning \"true\" or \"false\" accordingly, but the dongle requirement can be easily circumvented by modifying the software to always answer \"true\".\n\nModern dongles include built-in strong encryption and use fabrication techniques designed to thwart [[reverse engineering]]. Typical dongles also now contain [[non-volatile storage|non-volatile memory]] &mdash; essential parts of the software may actually be stored and executed on the dongle.  Thus dongles have become [[secure cryptoprocessor]]s that execute program instructions that may be input to the cryptoprocessor only in encrypted form.  The original secure cryptoprocessor was designed for copy protection of personal computer software (see US Patent 4,168,396, Sept 18, 1979)<ref>[http://www.google.com/patents?id=33kTAAAAEBAJ&dq=4168396 US Patent 4,168,396]</ref> to provide more security than dongles could then provide. See also [[bus encryption]].\n\nHardware cloning, where the dongle is emulated by a device driver, is also a threat to traditional dongles. To thwart this, some dongle vendors adopted smart card product, which is widely used in extremely rigid security requirement environments such as military and banking, in their dongle products.\n\nA more innovative modern dongle is designed with a [[code porting]] process which transfers encrypted parts of the software vendor's program code or license enforcement into a secure hardware environment (such as in a smart card OS, mentioned above). An [[Independent software vendor|ISV]] can port thousands of lines of important [[computer program]] code into the dongle.{{citation needed|date=December 2012}}\n\nIn addition, dongles have been criticized because as they are hardware, they are easily lost and prone to damage, potentially increasing operational costs such as device cost and delivery cost.<ref>https://www.10duke.com/blog/dodgy-dongle/</ref>\n\n==Game consoles==\nSome unlicensed titles for [[game console]]s (such as ''[[Super 3D Noah's Ark]]'' or ''[[Little Red Hood]]'') used dongles to connect to officially licensed [[ROM cartridge]]s, in order to circumvent the authentication chip embedded in the console.{{citation needed|date=March 2012}}\n\nSome [[cheat code]] devices, such as the [[GameShark]] and [[Action Replay]] use a dongle. Typically it attaches to the memory card slot of the system, with the disc based software refusing to work if the dongle is not detected. The dongle is also used for holding settings and storage of new codes, added either by the user or through official updates, because the disc, being read only, cannot store them. Some dongles will also double as normal memory cards.\n\n==See also==\n* [[Digital rights management]]\n* [[Hardware restrictions]]\n* [[License manager]]\n* [[Lock-out chip]]\n* [[Product activation]]\n* [[Security token]]\n* [[Trusted client]]\n* [[Software monetization]]\n\n==References==\n{{Reflist}}\n\n==External links==\n* [http://www.catb.org/~esr/jargon/html/D/dongle.html Jargon File: dongle]\n\n{{Software distribution}}\n\n{{DEFAULTSORT:Dongle, software protection}}\n[[Category:Copyright infringement of software]]\n[[Category:Copy protection]]\n[[Category:Digital rights management]]\n[[Category:Proprietary hardware]]\n[[Category:Software licenses]]\n[[Category:Warez]]\n", "text_old": "{{refimprove|date=March 2008}}\n\nA '''software protection dongle''' (commonly known as a '''dongle''' or '''key''') is an electronic [[copy protection]] and content protection device. When connected to a computer or other electronics, they unlock software functionality or decode [[Content (media)|content]].<ref>{{cite book |last1=Amos |first1=S. W. |last2=Amos |first2=Roger S. |title=Newnes Dictionary of Electronics |url=https://archive.org/details/newnesdictionary0000amos_o3q0 |url-access=registration |accessdate=4 July 2013 |year=2002 |edition=4th |publisher=[[Newnes Press]] |isbn=0750643315 |oclc=144646016 |page=[https://archive.org/details/newnesdictionary0000amos_o3q0/page/152 152]}}</ref> The hardware key is programmed with a [[product key]] or other cryptographic protection mechanism and functions via an electrical connector to an [[external bus]] of the computer or appliance.<ref>{{cite book |last=Stobbs |first=Gregory A. |title=Software Patents |edition=Third |url=https://books.google.com/books?id=Rn1vZWqSuNYC&pg=SA2-PA90 |accessdate=4 July 2013 |year=2012 |publisher=[[Wolters Kluwer]] |isbn=9781454811978 |oclc=802867781 |pages=2\u201390}}</ref>\n\nIn software protection, dongles are two-interface security tokens with transient data flow with a pull communication that reads security data from the dongle. In the absence of these dongles, certain software may run only in a restricted mode, or not at all. Apart from software protection, dongles can enable functions in electronic devices, such as receiving and processing encoded video streams on television sets.\n[[File:Hasp4 lpt dongle.jpg|thumb|HASP key dongle for LPT port]]\n==History==\nThe Merriam-Webster dictionary states that the \"First known use of dongle\" was in 1981 and that the etymology was \"perhaps alteration of dangle.\"<ref>{{cite web |title=Dongle |url=https://www.merriam-webster.com/dictionary/dongle |publisher=Merriam-Webster |accessdate=11 June 2019}}</ref>\n\n[[File:Parallel-Port-Dongle-Front.jpg|thumb|A Rainbow Tech parallel port dongle PCB, front side. Note the numbers rubbed off the chips to make reverse engineering harder]]\n\n[[File:Parallel-Port-Dongle-Back.jpg|thumb|A Rainbow Tech parallel port dongle PCB, back side]]\n\nDongles rapidly evolved into active devices that contained a serial transceiver ([[Universal asynchronous receiver/transmitter|UART]]) and even a [[microprocessor]] to handle transactions with the host. Later versions adopted the [[Universal Serial Bus|USB]] interface, which became the preferred choice over the [[serial port|serial]] or parallel interface.\n\nA 1992 advertisement for [[Rainbow Technologies]] claimed the word dongle was derived from the name \"Don Gall\". Though untrue, this has given rise to an [[urban myth]].<ref>[https://archive.org/details/byte-magazine-1992-08 Sentinel advert], ''Byte'' Magazine, p. 33</ref>\n\n===Usage===\n[[Image:Parallel-port-dongle.jpg|thumb|[[Daisy chain (electrical engineering)|Daisy chained]] parallel port copy protection dongles.]]\nEfforts to introduce dongle copy-protection in the mainstream software market have met stiff resistance from users. Such copy-protection is more typically used with very expensive packages and [[vertical market]] software such as [[Computer-aided design|CAD]]/[[Computer-aided manufacturing|CAM]] software, [[JTAG|cellphone flasher/JTAG debugger software]], [[MICROS Systems]] hospitality and special retail software, [[Digital Audio Workstation]] applications, and some [[translation memory]] packages.\n\nIn cases such as prepress and printing software, the dongle is encoded with a specific, per-user license key, which enables particular features in the target application. This is a form of tightly controlled licensing, which allows the vendor to engage in vendor lock-in and charge more than it would otherwise for the product. An example is the way [[Kodak]] licenses [[Prinergy]] to customers: When a computer-to-plate output device is sold to a customer, Prinergy's own license cost is provided separately to the customer, and the base price contains little more than the required licenses to output work to the device.\n\nUSB dongles are also a big part of [[Steinberg]]'s audio production and editing systems, such as [[Steinberg Cubase|Cubase]], WaveLab, [[Steinberg Hypersonic|Hypersonic]], [[HALion]], and others. The dongle used by Steinberg's products is also known as a Steinberg Key. The Steinberg Key can be purchased separately from its counterpart applications and generally comes bundled with the \"Syncrosoft License Control Center\" application, which is cross-platform compatible with both Mac OS X and Windows.\n\nSome software developers use traditional USB flash drives as software license dongles that contain hardware serial numbers in conjunction with the stored device ID strings, which are generally not easily changed by an end-user. A developer can also use the dongle to store user settings or even a complete \"portable\" version of the application. Not all flash drives are suitable for this use, as not all manufacturers install unique serial numbers into their devices.\n\nAlthough such medium security may deter a casual hacker, the lack of a processor core in the dongle to authenticate data, perform encryption/decryption, and execute inaccessible binary code makes such a passive dongle inappropriate for all but the lowest-priced software.  A simpler and even less secure option is to use unpartitioned or unallocated storage in the dongle to store license data. Common USB flash drives are relatively inexpensive compared to dedicated security dongle devices, but reading and storing data in a flash drive are easy to intercept, alter, and bypass.\n\n===Issues===\nThere are potential weaknesses in the implementation of the protocol between the dongle and the copy-controlled software. It requires considerable cunning to make this hard to [[Software cracking|crack]]. For example, a simple implementation might define a [[subprogram|function]] to check for the dongle's presence, returning \"true\" or \"false\" accordingly, but the dongle requirement can be easily circumvented by modifying the software to always answer \"true\".\n\nModern dongles include built-in strong encryption and use fabrication techniques designed to thwart [[reverse engineering]]. Typical dongles also now contain [[non-volatile storage|non-volatile memory]] &mdash; essential parts of the software may actually be stored and executed on the dongle.  Thus dongles have become [[secure cryptoprocessor]]s that execute program instructions that may be input to the cryptoprocessor only in encrypted form.  The original secure cryptoprocessor was designed for copy protection of personal computer software (see US Patent 4,168,396, Sept 18, 1979)<ref>[http://www.google.com/patents?id=33kTAAAAEBAJ&dq=4168396 US Patent 4,168,396]</ref> to provide more security than dongles could then provide. See also [[bus encryption]].\n\nHardware cloning, where the dongle is emulated by a device driver, is also a threat to traditional dongles. To thwart this, some dongle vendors adopted smart card product, which is widely used in extremely rigid security requirement environments such as military and banking, in their dongle products.\n\nA more innovative modern dongle is designed with a [[code porting]] process which transfers encrypted parts of the software vendor's program code or license enforcement into a secure hardware environment (such as in a smart card OS, mentioned above). An [[Independent software vendor|ISV]] can port thousands of lines of important [[computer program]] code into the dongle.{{citation needed|date=December 2012}}\n\nIn addition, dongles have been critized because as they are hardware, they are easily lost and prone to damage, potentially increasing operational costs such as device cost and delivery cost. <ref>https://www.10duke.com/blog/dodgy-dongle/</ref>\n\n==Game consoles==\nSome unlicensed titles for [[game console]]s (such as ''[[Super 3D Noah's Ark]]'' or ''[[Little Red Hood]]'') used dongles to connect to officially licensed [[ROM cartridge]]s, in order to circumvent the authentication chip embedded in the console.{{citation needed|date=March 2012}}\n\nSome [[cheat code]] devices, such as the [[GameShark]] and [[Action Replay]] use a dongle. Typically it attaches to the memory card slot of the system, with the disc based software refusing to work if the dongle is not detected. The dongle is also used for holding settings and storage of new codes, added either by the user or through official updates, because the disc, being read only, cannot store them. Some dongles will also double as normal memory cards.\n\n==See also==\n* [[Digital rights management]]\n* [[Hardware restrictions]]\n* [[License manager]]\n* [[Lock-out chip]]\n* [[Product activation]]\n* [[Security token]]\n* [[Trusted client]]\n* [[Software monetization]]\n\n==References==\n{{Reflist}}\n\n==External links==\n* [http://www.catb.org/~esr/jargon/html/D/dongle.html Jargon File: dongle]\n\n{{Software distribution}}\n\n{{DEFAULTSORT:Dongle, software protection}}\n[[Category:Copyright infringement of software]]\n[[Category:Copy protection]]\n[[Category:Digital rights management]]\n[[Category:Proprietary hardware]]\n[[Category:Software licenses]]\n[[Category:Warez]]\n", "name_user": "Nat965", "label": "safe", "comment": "ApplyGen fix(es),typo(s) fixed: critized \u2192 criticized", "url_page": "//en.wikipedia.org/wiki/Software_protection_dongle"}
