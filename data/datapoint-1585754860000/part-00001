{"title_page": "Single sign-on", "text_new": "{{short description|none}}\n'''Single sign-on''' ('''SSO''') is an authentication scheme that allows a user to [[login|log in]] with a single ID and password to any of several related, yet independent, software systems. It is often accomplished by using the [[Lightweight Directory Access Protocol]] (LDAP) and stored LDAP databases on (directory) servers.<ref>{{cite web|url=http://www.authenticationworld.com/Single-Sign-On-Authentication/SSOandLDAP.html |archive-url=https://archive.is/20140523114521/http://www.authenticationworld.com/Single-Sign-On-Authentication/SSOandLDAP.html |url-status=dead |archive-date=2014-05-23 |title=SSO and LDAP Authentication |publisher=Authenticationworld.com |accessdate=2014-05-23}} </ref>  A simple version of single sign-on can be achieved over [[Internet protocol suite|IP networks]] using [[HTTP cookie|cookies]] but only if the sites share a common DNS parent domain.<ref>{{cite web|url=http://alleged.org.uk/pdc/2007/08/13.html  |title=OpenID versus Single-Sign-On Server |publisher=alleged.org.uk |date=2007-08-13 |accessdate=2014-05-23}}</ref> \n\nFor clarity, a distinction should be made between Directory Server Authentication and single sign-on: Directory Server Authentication refers to systems requiring authentication for each application but using the same credentials from a directory server, whereas single sign-on refers to systems where a single authentication provides access to multiple applications by passing the authentication token seamlessly to configured applications.\n\nConversely, '''single sign-off''' or '''single log-out''' ('''SLO''') is the property whereby a single action of signing out terminates access to multiple software systems.\n\nAs different applications and resources support different [[authentication]] mechanisms, single sign-on must internally store the credentials used for initial authentication and translate them to the credentials required for the different mechanisms.\n\nOther shared authentication schemes such as [[OpenID]], and [[OpenID Connect]] offer other services that may require users to make choices during a sign-on to a resource, but can be configured for single sign-on if those other services (such as user consent) are disabled.<ref>{{cite web|url=https://www.onelogin.com/pages/openid-connect |title=OpenID Connect Single Sign-On (SSO)}}</ref> An increasing number of federated social logons, like [[Facebook Connect]], do require the user to enter consent choices upon first registration with a new resource, and so are not always single sign-on in the strictest sense.\n\n==Benefits==\nBenefits of using single sign-on include:\n* Mitigate risk for access to 3rd-party sites (user passwords not stored or managed externally)\n* Reduce [[password fatigue]] from different username and password combinations\n* Reduce time spent re-entering passwords for the same identity\n* Reduce IT costs due to lower number of IT [[help desk]] calls about passwords<ref>{{cite web|url=https://www.uoguelph.ca/ccs/security/internet/single-sign-sso/benefits |title=Benefits of SSO |publisher=University of Guelph |accessdate=2014-05-23}}</ref>\n\nSSO shares centralized [[authentication server]]s that all other applications and systems use for authentication purposes and combines this with techniques to ensure that users do not have to actively enter their credentials more than once.\n\n==Criticism==\nThe term ''reduced sign-on'' (RSO) has been used by some to reflect the fact that ''single sign-on'' is impractical in addressing the need for different levels of secure access in the enterprise, and as such more than one authentication server may be necessary.<ref name=authenticationworld>{{cite web|url=http://www.authenticationworld.com/Single-Sign-On-Authentication/\n |archive-url=https://archive.is/20140315095827/http://www.authenticationworld.com/Single-Sign-On-Authentication/\n |url-status=dead\n |archive-date=2014-03-15\n |title=Single Sign On Authentication |publisher=Authenticationworld.com |accessdate=2013-05-28}} </ref>\n\nAs single sign-on provides access to many resources once the user is initially authenticated (\"keys to the castle\"), it increases the negative impact in case the credentials are available to other people and misused. Therefore, single sign-on requires an increased focus on the protection of the user credentials, and should ideally be combined with strong authentication methods like [[smart card]]s and [[one-time password]] tokens.<ref name=\"authenticationworld\"/>\n\nSingle sign-on also makes the authentication systems highly critical; a loss of their availability can result in denial of access to all systems unified under the SSO. SSO can be configured with session failover capabilities in order to maintain the system operation.<ref>{{cite web|url=\nhttp://docs.oracle.com/cd/E19879-01/821-0182/abdln/index.html |title=Sun GlassFish Enterprise Server v2.1.1 High Availability Administration Guide |publisher=Oracle.com |accessdate=2013-05-28}}</ref>  Nonetheless, the risk of system failure may make single sign-on undesirable for systems to which access must be guaranteed at all times, such as security or plant-floor systems.\n\nFurthermore, the use of single-sign-on techniques utilizing [[social networking service]]s such as [[Facebook]] may render third party websites unusable within libraries, schools, or workplaces that block social media sites for productivity reasons. It can also cause difficulties in countries with active [[censorship]] regimes, such as [[China]] and its \"[[Golden Shield Project]],\" where the third party website may not be actively censored, but is effectively blocked if a user's social login is blocked.<ref>{{cite news|last1=Laurenson|first1=Lydia|title=The Censorship Effect|url=https://techcrunch.com/2014/05/03/business-and-censorship/|accessdate=27 February 2015|work=TechCrunch|date=3 May 2014}}</ref><ref>{{cite news|last1=Chester|first1=Ken|title=Censorship, external authentication, and other social media lessons from China\u2019s Great Firewall|url=https://www.techinasia.com/china-social-media-lessons-from-great-firewall|accessdate=9 March 2016|work=Tech in Asia|date=12 August 2013}}</ref>\n\n==Security==\nIn March, 2012, a research paper<ref>{{cite web|\nurl=http://research.microsoft.com/apps/pubs/default.aspx?id=160659\n|title=Signing Me onto Your Accounts through Facebook and Google: a Traffic-Guided Security Study of Commercially Deployed Single-Sign-On Web Services\n|author1=Rui Wang |author2=Shuo Chen |author3=XiaoFeng Wang  |last-author-amp=yes }}</ref> reported an extensive study on the security of [[social login]] mechanisms. The authors found 8 serious logic flaws in high-profile ID providers and relying party websites, such as [[OpenID]] (including Google ID and PayPal Access), [[Facebook]], [[Janrain]], [[Freelancer.com|Freelancer]], [[FarmVille]], and [[Sears.com]]. Because the researchers informed ID providers and relying party websites prior to public announcement of the discovery of the flaws, the vulnerabilities were corrected, and there have been no security breaches reported.<ref>[http://openid.net/2012/03/14/vulnerability-report-data-confusion/ \"OpenID: Vulnerability report, Data confusion\"] - OpenID Foundation, March 14, 2012</ref>\n\nIn May 2014, a vulnerability named [[Covert Redirect]] was disclosed.<ref name=\"TomsGuid\">{{cite web | url=http://www.tomsguide.com/us/facebook-google-covert-redirect-flaw,news-18726.html | title=Facebook, Google Users Threatened by New Security Flaw |publisher= Tom's Guide |date=2 May 2014 | accessdate=11 November 2014}}</ref> It was first reported \"Covert Redirect Vulnerability Related to OAuth 2.0 and OpenID\" by its discoverer Wang Jing, a Mathematical PhD student from [[Nanyang Technological University]], Singapore.<ref name=\"Covert_Redirect_OAuth_OpenID\">{{cite web | url=http://tetraph.com/covert_redirect/oauth2_openid_covert_redirect.html | title=Covert Redirect Vulnerability Related to OAuth 2.0 and OpenID |publisher= Tetraph |date=1 May 2014 | accessdate=10 November 2014}}</ref><ref name=\"TechXplore\">{{cite web | url=http://techxplore.com/news/2014-05-math-student-oauth-openid-vulnerability.html | title=Math student detects OAuth, OpenID security vulnerability |publisher= Tech Xplore |date=3 May 2014 | accessdate=10 November 2014}}</ref><ref name=\"Yahoo_Report\">{{cite web | url=https://news.yahoo.com/facebook-google-users-threatened-security-192547549.html | title=Facebook, Google Users Threatened by New Security Flaw |publisher= Yahoo |date=2 May 2014 | accessdate=10 November 2014}}</ref> In fact, almost all Single sign-on protocols are affected. Covert Redirect takes advantage of third-party clients susceptible to an [[Cross-site scripting|XSS]] or Open Redirect.<ref name=\"Symantec\">{{cite web | url=http://www.symantec.com/connect/blogs/covert-redirect-flaw-oauth-not-next-heartbleed | title=Covert Redirect Flaw in OAuth is Not the Next Heartbleed |publisher= Symantec |date=3 May 2014 | accessdate=10 November 2014}}</ref>\n\n==Privacy==\nAs originally implemented in Kerberos and SAML, single sign-on did not give users any choices about releasing their personal information to each new resource that the user visited. This worked well enough within a single enterprise, like MIT where Kerberos was invented, or major corporations where all of the resources were internal sites. However, as federated services like [[Active Directory Federation Services]] proliferated, the user's private information was sent out to affiliated sites not under control of the enterprise that collected the data from the user. Since privacy regulations are now tightening with legislation like the [[GDPR]], the newer methods like [[OpenID Connect]] have started to become more attractive; for example MIT, the originator of Kerberos, now supports [[OpenID Connect]].<ref>{{cite web|url=https://ist.mit.edu/oidc|author=MIT IST|title=OpenID Connect Authorization}}</ref>\n\n==== Email address ====\nSingle sign-on in theory can work without revealing identifying information like email address to the relying party (credential consumer), but many credential providers do not allow users to configure what information is passed on to the credential consumer. As of 2019, Google and Facebook sign-in do not require users to share email address with the credential consumer. '[[Sign in with Apple]]' introduced in [[iOS 13]] allows user to request a unique relay email each time the user signs up for a new service, thus reducing the likelihood of account linking by the credential consumer.<ref>{{Cite news|url=https://www.wired.com/story/sign-in-with-apple-mixed-reactions/|title=App Makers Are Mixed on \u2018Sign In With Apple\u2019|last=Goode|first=Lauren|date=2019-06-15|work=[[Wired (magazine)|Wired]]|access-date=2019-06-15|issn=1059-1028}}</ref>\n\n==Common configurations==\n\n===Kerberos-based===\n* Initial sign-on prompts the user for credentials, and gets a [[Kerberos (protocol)|Kerberos]] [[ticket-granting ticket]] (TGT).\n* Additional software applications requiring authentication, such as [[email client]]s, [[wiki]]s, and [[revision control|revision-control]] systems, use the ticket-granting ticket to acquire service tickets, proving the user's identity to the mailserver / wiki server / etc. without prompting the user to re-enter credentials.\n\n[[Microsoft Windows|Windows]] environment - Windows login fetches TGT. [[Active Directory]]-aware applications fetch service tickets, so the user is not prompted to re-authenticate.\n\n[[Unix]]/[[Linux]] environment -  Log in via Kerberos [[Pluggable Authentication Modules|PAM]] modules fetches TGT. Kerberized client applications such as [[Evolution (software)|Evolution]], [[Firefox]], and [[Apache Subversion|SVN]] use service tickets, so the user is not prompted to re-authenticate.\n\n===Smart-card-based===\nInitial sign-on prompts the user for the [[smart card]]. Additional [[Application software|software applications]] also use the smart card, without prompting the user to re-enter credentials. Smart-card-based single sign-on can either use certificates or passwords stored on the smart card.\n\n===Integrated Windows Authentication===\n''[[Integrated Windows Authentication]]'' is a term associated with [[Microsoft]] products and refers to the [[SPNEGO]], [[Kerberos protocol|Kerberos]], and [[NTLMSSP]] authentication protocols with respect to [[Security Support Provider Interface|SSPI]] functionality introduced with Microsoft [[Windows 2000]] and included with later [[Windows NT]]-based operating systems. The term is most commonly used to refer to the automatically authenticated connections between Microsoft [[Internet Information Services]] and [[Internet Explorer]].  Cross-platform [[Active Directory]] integration vendors have extended the Integrated Windows Authentication paradigm to Unix (including Mac) and GNU/Linux systems.\n\n===Security Assertion Markup Language===\n[[Security Assertion Markup Language]] (SAML) is an [[XML]]-based method for exchanging user security information between an [[identity provider (SAML)|SAML identity provider]] and a [[service provider (SAML)|SAML service provider]]. [[SAML 2.0]] supports [[World Wide Web Consortium|W3C]] XML encryption and service provider initiated web browser single sign-on exchanges.  A user wielding a user agent (usually a web browser) is called the subject in SAML-based single sign-on.  The user requests a web resource protected by a SAML service provider.  The service provider, wishing to know the identity of the user, issues an authentication request to a SAML identity provider through the user agent.  The identity provider is the one that provides the user credentials.  The service provider trusts the [[user information]] from the identity provider to provide access to its services or resources.\n\n==Emerging configurations==\n\n===Mobile devices as access credentials===\nA newer variation of single-sign-on authentication has been developed using mobile devices as access credentials.  Users' mobile devices can be used to automatically log them onto multiple systems, such as building-access-control systems and computer systems, through the use of authentication methods which include [[OpenID Connect]] and SAML,<ref>{{cite web|url=https://www.washingtonpost.com/business/capitalbusiness/microstrategys-office-of-the-future-includes-mobile-identity-and-cybersecurity/2013/04/13/eb82e074-a1e3-11e2-be47-b44febada3a8_story.html|title=MicroStrategy\u2019s office of the future includes mobile identity and cybersecurity|publisher=Washington Post |date=2014-04-14|accessdate=2014-03-30}}</ref> in conjunction with an [[X.509]] [[ITU-T]] [[cryptography]] certificate used to identify the mobile device to an access server.\n\nA mobile device is \"something you have\", as opposed to a password which is \"something you know\", or biometrics (fingerprint, retinal scan, facial recognition,...) which is \"something you are\". Security experts recommend using at least two out of these three factors ([[multi-factor authentication]]) for best protection.\n\n==See also==\n* [[Central Authentication Service]]\n* [[Identity management]]\n* [[Identity management systems]]\n* [[List of single sign-on implementations]]\n* [[Security Assertion Markup Language]]\n* [[Usability of web authentication systems]]\n\n==References==\n{{Reflist}}\n\n==External links==\n* [http://www.opengroup.org/security/sso/sso_intro.htm Single sign-on intro with diagrams]\n\n{{DEFAULTSORT:Single Sign-On}}\n[[Category:Password authentication]]\n[[Category:Federated identity]]\n[[Category:Computer access control]]\n", "text_old": "{{short description|none}}\n'''Single sign-on''' ('''SSO''') is a property of [[authorization (computer access control)|access control]] of multiple related, yet independent, software systems. With this property, a user [[login|logs in]] with a single ID and password to gain access to any of several related systems. It is often accomplished by using the [[Lightweight Directory Access Protocol]] (LDAP) and stored LDAP databases on (directory) servers.<ref>{{cite web|url=http://www.authenticationworld.com/Single-Sign-On-Authentication/SSOandLDAP.html |archive-url=https://archive.is/20140523114521/http://www.authenticationworld.com/Single-Sign-On-Authentication/SSOandLDAP.html |url-status=dead |archive-date=2014-05-23 |title=SSO and LDAP Authentication |publisher=Authenticationworld.com |accessdate=2014-05-23}} </ref>  A simple version of single sign-on can be achieved over [[Internet protocol suite|IP networks]] using [[HTTP cookie|cookies]] but only if the sites share a common DNS parent domain.<ref>{{cite web|url=http://alleged.org.uk/pdc/2007/08/13.html  |title=OpenID versus Single-Sign-On Server |publisher=alleged.org.uk |date=2007-08-13 |accessdate=2014-05-23}}</ref> \n\nFor clarity, a distinction should be made between Directory Server Authentication and single sign-on: Directory Server Authentication refers to systems requiring authentication for each application but using the same credentials from a directory server, whereas single sign-on refers to systems where a single authentication provides access to multiple applications by passing the authentication token seamlessly to configured applications.\n\nConversely, '''single sign-off''' or '''single log-out''' ('''SLO''') is the property whereby a single action of signing out terminates access to multiple software systems.\n\nAs different applications and resources support different [[authentication]] mechanisms, single sign-on must internally store the credentials used for initial authentication and translate them to the credentials required for the different mechanisms.\n\nOther shared authentication schemes such as [[OpenID]], and [[OpenID Connect]] offer other services that may require users to make choices during a sign-on to a resource, but can be configured for single sign-on if those other services (such as user consent) are disabled.<ref>{{cite web|url=https://www.onelogin.com/pages/openid-connect |title=OpenID Connect Single Sign-On (SSO)}}</ref> An increasing number of federated social logons, like [[Facebook Connect]], do require the user to enter consent choices upon first registration with a new resource, and so are not always single sign-on in the strictest sense.\n\n==Benefits==\nBenefits of using single sign-on include:\n* Mitigate risk for access to 3rd-party sites (user passwords not stored or managed externally)\n* Reduce [[password fatigue]] from different username and password combinations\n* Reduce time spent re-entering passwords for the same identity\n* Reduce IT costs due to lower number of IT [[help desk]] calls about passwords<ref>{{cite web|url=https://www.uoguelph.ca/ccs/security/internet/single-sign-sso/benefits |title=Benefits of SSO |publisher=University of Guelph |accessdate=2014-05-23}}</ref>\n\nSSO shares centralized [[authentication server]]s that all other applications and systems use for authentication purposes and combines this with techniques to ensure that users do not have to actively enter their credentials more than once.\n\n==Criticism==\nThe term ''reduced sign-on'' (RSO) has been used by some to reflect the fact that ''single sign-on'' is impractical in addressing the need for different levels of secure access in the enterprise, and as such more than one authentication server may be necessary.<ref name=authenticationworld>{{cite web|url=http://www.authenticationworld.com/Single-Sign-On-Authentication/\n |archive-url=https://archive.is/20140315095827/http://www.authenticationworld.com/Single-Sign-On-Authentication/\n |url-status=dead\n |archive-date=2014-03-15\n |title=Single Sign On Authentication |publisher=Authenticationworld.com |accessdate=2013-05-28}} </ref>\n\nAs single sign-on provides access to many resources once the user is initially authenticated (\"keys to the castle\"), it increases the negative impact in case the credentials are available to other people and misused. Therefore, single sign-on requires an increased focus on the protection of the user credentials, and should ideally be combined with strong authentication methods like [[smart card]]s and [[one-time password]] tokens.<ref name=\"authenticationworld\"/>\n\nSingle sign-on also makes the authentication systems highly critical; a loss of their availability can result in denial of access to all systems unified under the SSO. SSO can be configured with session failover capabilities in order to maintain the system operation.<ref>{{cite web|url=\nhttp://docs.oracle.com/cd/E19879-01/821-0182/abdln/index.html |title=Sun GlassFish Enterprise Server v2.1.1 High Availability Administration Guide |publisher=Oracle.com |accessdate=2013-05-28}}</ref>  Nonetheless, the risk of system failure may make single sign-on undesirable for systems to which access must be guaranteed at all times, such as security or plant-floor systems.\n\nFurthermore, the use of single-sign-on techniques utilizing [[social networking service]]s such as [[Facebook]] may render third party websites unusable within libraries, schools, or workplaces that block social media sites for productivity reasons. It can also cause difficulties in countries with active [[censorship]] regimes, such as [[China]] and its \"[[Golden Shield Project]],\" where the third party website may not be actively censored, but is effectively blocked if a user's social login is blocked.<ref>{{cite news|last1=Laurenson|first1=Lydia|title=The Censorship Effect|url=https://techcrunch.com/2014/05/03/business-and-censorship/|accessdate=27 February 2015|work=TechCrunch|date=3 May 2014}}</ref><ref>{{cite news|last1=Chester|first1=Ken|title=Censorship, external authentication, and other social media lessons from China\u2019s Great Firewall|url=https://www.techinasia.com/china-social-media-lessons-from-great-firewall|accessdate=9 March 2016|work=Tech in Asia|date=12 August 2013}}</ref>\n\n==Security==\nIn March, 2012, a research paper<ref>{{cite web|\nurl=http://research.microsoft.com/apps/pubs/default.aspx?id=160659\n|title=Signing Me onto Your Accounts through Facebook and Google: a Traffic-Guided Security Study of Commercially Deployed Single-Sign-On Web Services\n|author1=Rui Wang |author2=Shuo Chen |author3=XiaoFeng Wang  |last-author-amp=yes }}</ref> reported an extensive study on the security of [[social login]] mechanisms. The authors found 8 serious logic flaws in high-profile ID providers and relying party websites, such as [[OpenID]] (including Google ID and PayPal Access), [[Facebook]], [[Janrain]], [[Freelancer.com|Freelancer]], [[FarmVille]], and [[Sears.com]]. Because the researchers informed ID providers and relying party websites prior to public announcement of the discovery of the flaws, the vulnerabilities were corrected, and there have been no security breaches reported.<ref>[http://openid.net/2012/03/14/vulnerability-report-data-confusion/ \"OpenID: Vulnerability report, Data confusion\"] - OpenID Foundation, March 14, 2012</ref>\n\nIn May 2014, a vulnerability named [[Covert Redirect]] was disclosed.<ref name=\"TomsGuid\">{{cite web | url=http://www.tomsguide.com/us/facebook-google-covert-redirect-flaw,news-18726.html | title=Facebook, Google Users Threatened by New Security Flaw |publisher= Tom's Guide |date=2 May 2014 | accessdate=11 November 2014}}</ref> It was first reported \"Covert Redirect Vulnerability Related to OAuth 2.0 and OpenID\" by its discoverer Wang Jing, a Mathematical PhD student from [[Nanyang Technological University]], Singapore.<ref name=\"Covert_Redirect_OAuth_OpenID\">{{cite web | url=http://tetraph.com/covert_redirect/oauth2_openid_covert_redirect.html | title=Covert Redirect Vulnerability Related to OAuth 2.0 and OpenID |publisher= Tetraph |date=1 May 2014 | accessdate=10 November 2014}}</ref><ref name=\"TechXplore\">{{cite web | url=http://techxplore.com/news/2014-05-math-student-oauth-openid-vulnerability.html | title=Math student detects OAuth, OpenID security vulnerability |publisher= Tech Xplore |date=3 May 2014 | accessdate=10 November 2014}}</ref><ref name=\"Yahoo_Report\">{{cite web | url=https://news.yahoo.com/facebook-google-users-threatened-security-192547549.html | title=Facebook, Google Users Threatened by New Security Flaw |publisher= Yahoo |date=2 May 2014 | accessdate=10 November 2014}}</ref> In fact, almost all Single sign-on protocols are affected. Covert Redirect takes advantage of third-party clients susceptible to an [[Cross-site scripting|XSS]] or Open Redirect.<ref name=\"Symantec\">{{cite web | url=http://www.symantec.com/connect/blogs/covert-redirect-flaw-oauth-not-next-heartbleed | title=Covert Redirect Flaw in OAuth is Not the Next Heartbleed |publisher= Symantec |date=3 May 2014 | accessdate=10 November 2014}}</ref>\n\n==Privacy==\nAs originally implemented in Kerberos and SAML, single sign-on did not give users any choices about releasing their personal information to each new resource that the user visited. This worked well enough within a single enterprise, like MIT where Kerberos was invented, or major corporations where all of the resources were internal sites. However, as federated services like [[Active Directory Federation Services]] proliferated, the user's private information was sent out to affiliated sites not under control of the enterprise that collected the data from the user. Since privacy regulations are now tightening with legislation like the [[GDPR]], the newer methods like [[OpenID Connect]] have started to become more attractive; for example MIT, the originator of Kerberos, now supports [[OpenID Connect]].<ref>{{cite web|url=https://ist.mit.edu/oidc|author=MIT IST|title=OpenID Connect Authorization}}</ref>\n\n==== Email address ====\nSingle sign-on in theory can work without revealing identifying information like email address to the relying party (credential consumer), but many credential providers do not allow users to configure what information is passed on to the credential consumer. As of 2019, Google and Facebook sign-in do not require users to share email address with the credential consumer. '[[Sign in with Apple]]' introduced in [[iOS 13]] allows user to request a unique relay email each time the user signs up for a new service, thus reducing the likelihood of account linking by the credential consumer.<ref>{{Cite news|url=https://www.wired.com/story/sign-in-with-apple-mixed-reactions/|title=App Makers Are Mixed on \u2018Sign In With Apple\u2019|last=Goode|first=Lauren|date=2019-06-15|work=[[Wired (magazine)|Wired]]|access-date=2019-06-15|issn=1059-1028}}</ref>\n\n==Common configurations==\n\n===Kerberos-based===\n* Initial sign-on prompts the user for credentials, and gets a [[Kerberos (protocol)|Kerberos]] [[ticket-granting ticket]] (TGT).\n* Additional software applications requiring authentication, such as [[email client]]s, [[wiki]]s, and [[revision control|revision-control]] systems, use the ticket-granting ticket to acquire service tickets, proving the user's identity to the mailserver / wiki server / etc. without prompting the user to re-enter credentials.\n\n[[Microsoft Windows|Windows]] environment - Windows login fetches TGT. [[Active Directory]]-aware applications fetch service tickets, so the user is not prompted to re-authenticate.\n\n[[Unix]]/[[Linux]] environment -  Log in via Kerberos [[Pluggable Authentication Modules|PAM]] modules fetches TGT. Kerberized client applications such as [[Evolution (software)|Evolution]], [[Firefox]], and [[Apache Subversion|SVN]] use service tickets, so the user is not prompted to re-authenticate.\n\n===Smart-card-based===\nInitial sign-on prompts the user for the [[smart card]]. Additional [[Application software|software applications]] also use the smart card, without prompting the user to re-enter credentials. Smart-card-based single sign-on can either use certificates or passwords stored on the smart card.\n\n===Integrated Windows Authentication===\n''[[Integrated Windows Authentication]]'' is a term associated with [[Microsoft]] products and refers to the [[SPNEGO]], [[Kerberos protocol|Kerberos]], and [[NTLMSSP]] authentication protocols with respect to [[Security Support Provider Interface|SSPI]] functionality introduced with Microsoft [[Windows 2000]] and included with later [[Windows NT]]-based operating systems. The term is most commonly used to refer to the automatically authenticated connections between Microsoft [[Internet Information Services]] and [[Internet Explorer]].  Cross-platform [[Active Directory]] integration vendors have extended the Integrated Windows Authentication paradigm to Unix (including Mac) and GNU/Linux systems.\n\n===Security Assertion Markup Language===\n[[Security Assertion Markup Language]] (SAML) is an [[XML]]-based method for exchanging user security information between an [[identity provider (SAML)|SAML identity provider]] and a [[service provider (SAML)|SAML service provider]]. [[SAML 2.0]] supports [[World Wide Web Consortium|W3C]] XML encryption and service provider initiated web browser single sign-on exchanges.  A user wielding a user agent (usually a web browser) is called the subject in SAML-based single sign-on.  The user requests a web resource protected by a SAML service provider.  The service provider, wishing to know the identity of the user, issues an authentication request to a SAML identity provider through the user agent.  The identity provider is the one that provides the user credentials.  The service provider trusts the [[user information]] from the identity provider to provide access to its services or resources.\n\n==Emerging configurations==\n\n===Mobile devices as access credentials===\nA newer variation of single-sign-on authentication has been developed using mobile devices as access credentials.  Users' mobile devices can be used to automatically log them onto multiple systems, such as building-access-control systems and computer systems, through the use of authentication methods which include [[OpenID Connect]] and SAML,<ref>{{cite web|url=https://www.washingtonpost.com/business/capitalbusiness/microstrategys-office-of-the-future-includes-mobile-identity-and-cybersecurity/2013/04/13/eb82e074-a1e3-11e2-be47-b44febada3a8_story.html|title=MicroStrategy\u2019s office of the future includes mobile identity and cybersecurity|publisher=Washington Post |date=2014-04-14|accessdate=2014-03-30}}</ref> in conjunction with an [[X.509]] [[ITU-T]] [[cryptography]] certificate used to identify the mobile device to an access server.\n\nA mobile device is \"something you have\", as opposed to a password which is \"something you know\", or biometrics (fingerprint, retinal scan, facial recognition,...) which is \"something you are\". Security experts recommend using at least two out of these three factors ([[multi-factor authentication]]) for best protection.\n\n==See also==\n* [[Central Authentication Service]]\n* [[Identity management]]\n* [[Identity management systems]]\n* [[List of single sign-on implementations]]\n* [[Security Assertion Markup Language]]\n* [[Usability of web authentication systems]]\n\n==References==\n{{Reflist}}\n\n==External links==\n* [http://www.opengroup.org/security/sso/sso_intro.htm Single sign-on intro with diagrams]\n\n{{DEFAULTSORT:Single Sign-On}}\n[[Category:Password authentication]]\n[[Category:Federated identity]]\n[[Category:Computer access control]]\n", "name_user": "Waldyrious", "label": "safe", "comment": "simplify opening sentence (MOS:JARGON,WP:TECHNICAL)", "url_page": "//en.wikipedia.org/wiki/Single_sign-on"}
