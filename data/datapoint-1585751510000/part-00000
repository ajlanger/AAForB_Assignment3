{"title_page": "Access-control list", "text_new": "An '''access-control list''' ('''ACL'''), with respect to a [[computer]] [[file system]], is a list of [[File system permissions|permissions]] attached to an [[Computer file|object]].  An ACL specifies which users or system processes are granted access to objects, as well as what operations are allowed on given objects.<ref>{{IETF RFC|4949}}</ref> Each entry in a typical ACL specifies a subject and an operation.  For instance, if a file object has an ACL that contains {{samp|(Alice: read,write; Bob: read)}}, this would give Alice permission to read and write the file and Bob to only read it.\n\n== Implementations ==\nMany kinds of operating systems implement ACLs, or have a historical implementation. The first time in the [[filesystem]] of [[Multics]] in 1965.<ref>''Elementary Information Security'' by Richard E. Smith, p. 150</ref>\n\n=== Filesystem ACLs ===\nA filesystem ACL is a data structure (usually a table) containing entries that specify individual user or group rights to specific system objects such as programs, processes, or files. These entries are known as access-control entries (ACEs) in the [[Microsoft Windows NT]],<ref>{{cite web| url= https://technet.microsoft.com/en-us/library/bb457115.aspx| title=Managing Authorization and Access Control| date= 2005-11-03| publisher= [[Microsoft Technet]]| accessdate= 2013-04-08}}</ref> [[OpenVMS]], [[Unix-like]], and [[Mac OS X]] [[operating system]]s. Each accessible object contains an identifier to its ACL. The privileges or permissions determine specific access rights, such as whether a user can read from, write to, or [[execution (computing)|execute]] an object. In some implementations, an ACE can control whether or not a user, or group of users, may alter the ACL on an object. \n\n[[POSIX]] 1003.1e/1003.2c working group made an effort to standardize ACLs, resulting in what is now known as \"POSIX.1e ACL\" or simply \"POSIX ACL\".<ref>{{cite web |last1=Gr\u00fcnbacher |first1=Andreas |title=POSIX Access Control Lists on Linux |url=https://www.usenix.org/legacy/publications/library/proceedings/usenix03/tech/freenix03/full_papers/gruenbacher/gruenbacher_html/main.html |website=Usenix |accessdate=12 December 2019}}</ref> The POSIX.1e/POSIX.2c drafts were withdrawn in 1997 due to participants losing interest for funding the project and turning to more powerful alternatives such as NFSv4 ACL.<ref>{{cite web |last1=wurtzkurdle |title=Why was POSIX.1e withdrawn? |url=https://unix.stackexchange.com/a/506641 |website=Unix StackExchange |accessdate=12 December 2019}}</ref> {{As of|2019|12}}, no live sources of the draft could be found on the Internet, but it can still be found in the [[Internet Archive]].<ref>{{cite web |last1=Tr\u00fcmper |first1=Winfried |title=Summary about Posix.1e |url=https://wt.xpilot.org/publications/posix.1e/|archiveurl=https://web.archive.org/web/20080723061358/https://wt.xpilot.org/publications/posix.1e/ |archivedate=2008-07-23 |date=February 28, 1999}}</ref>\n\nMost of the Unix and Unix-like operating systems (e.g. [[Linux]] since 2.5.46 or November 2002,<ref>{{cite web| url= https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/3/html/Release_Notes/as-x86/index.html\n| title= Red Hat Enterprise Linux AS 3 Release Notes (x86 Edition)| quote= EA (Extended Attributes) and ACL (Access Control Lists) functionality is now available for ext3 file systems. In addition, ACL functionality is available for NFS.| year= 2003| publisher= [[Red Hat]]| accessdate= 2013-04-08}}</ref> [[BSD]], or [[Solaris (operating system)|Solaris]]) support POSIX.1e ACLs (not necessarily draft 17). Many of them, for example [[AIX]], [[FreeBSD]],<ref>{{cite web| url= https://wiki.freebsd.org/NFSv4_ACLs| title= NFSv4 ACLs| date= 2011-09-12| publisher= [[FreeBSD]]| accessdate= 2013-04-08}}</ref> [[Mac OS X]] beginning with version 10.4 (\"[[Mac OS X Tiger|Tiger]]\"), or [[Solaris (operating system)|Solaris]] with [[ZFS]] filesystem,<ref>{{cite web| url= http://docs.oracle.com/cd/E19082-01/817-2271/ftyxi/index.html| title= Chapter 8 Using ACLs and Attributes to Protect ZFS Files| publisher= [[Oracle Corporation]]| date= 2009-10-01| accessdate= 2013-04-08}}</ref> support [[NFSv4]] ACLs, which are part of the NFSv4 standard. There are two experimental implementations of NFSv4 ACLs for Linux: NFSv4 ACLs support for [[Ext3]] filesystem<ref>{{cite web| url= http://users.suse.com/~agruen/nfs4acl/| title= Native NFSv4 ACLs on Linux| first= Andreas| last= Gr\u00fcnbacher| date= May 2008| publisher= [[SUSE]]| archive-url= https://web.archive.org/web/20130620012339/http://users.suse.com/~agruen/nfs4acl/| archive-date= 2013-06-20| url-status= dead| accessdate= 2013-04-08}}</ref> and the more recent [[Richacls]] which brings NFSv4 ACLs support for [[Ext4]] filesystem.<ref>{{cite web| url=http://www.bestbits.at/richacl/| title=Richacls - Native NFSv4 ACLs on Linux| first=Andreas| last=Gr\u00fcnbacher| date=July\u2013September 2010| publisher=bestbits.at| accessdate=2013-04-08| archive-url=https://web.archive.org/web/20130320080142/http://www.bestbits.at/richacl/| archive-date=2013-03-20| url-status=dead}}</ref> ACLs are usually stored in the extended attributes of a file on these systems.\n\n[[PRIMOS]] featured ACLs at least as early as 1984.<ref>{{cite news| date = 1984-05-21| title= P.S.I. Pacer Software, Inc. Gnet-II revision 3.0| url  = https://books.google.com/books?id=KAUpSdv4AO4C| department            = Communications| work = Computerworld| volume= 18| issue= 21| page = 54| issn = 0010-4841| access-date= 2017-06-30| quote= The new version of Gnet-II (revision 3.0) has added a line-security mechanism which is implemented under the Primos ACL subsystem.}}</ref>\n\nIn the 1990s the ACL and [[Role-based access control|RBAC]] models were extensively tested{{by whom?|date=June 2017}} and used to administer file permissions.\n\n=== Active Directory ACLs ===\n\nMicrosoft's [[Active Directory]] Directory Service implements an [[LDAP]] server that store and disseminate configuration information about users and computers in a domain.<ref>{{cite web|title=[MS-ADTS]: Active Directory Technical Specification|url=https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-adts/d2435927-0999-4c62-8c6d-13ba31a52e1a}}</ref> Active Directory extends the LDAP specification by adding the same type of access-control list mechanism as Windows NT uses for the NTFS filesystem. Windows 2000 then extended the syntax for access control entries such that they could not only grant or deny access to entire LDAP objects, but also to individual attributes within these objects.<ref>{{cite journal|last=Swift|first=Michael M.|title=Improving the granularity of access control for Windows 2000|journal=ACM Transactions on Information and System Security (Tissec)|volume=5|issue=4|pages=398\u2013437|date=November 2002|doi=10.1145/581271.581273}}</ref>\n\n=== Networking ACLs ===\nOn some types of proprietary computer-hardware (in particular [[router (computing)|routers]] and [[Network switch|switches]]), an access-control list provides rules that are applied to [[TCP and UDP port|port numbers]] or [[Ip address|IP addresses]] that are available on a [[server (computing)|host]] or other [[Network Layer|layer 3]], each with a list of hosts and/or networks permitted to use the service. Although it is additionally possible to configure access-control lists based on network domain names, this is a questionable idea because individual [[Transmission_Control_Protocol|TCP]], [[User_Datagram_Protocol|UDP]], and [[Internet_Control_Message_Protocol|ICMP]] headers do not contain domain names. Consequently, the device enforcing the access-control list must separately [[Name_resolution_(computer_systems)|resolve names]] to numeric addresses. This presents an additional [[attack surface]] for an attacker who is seeking to compromise security of the system which the access-control list is protecting. Both individual [[server (computing)|servers]] as well as [[router (computing)|routers]] can have network ACLs. Access-control lists can generally be configured to control both inbound and outbound traffic, and in this context they are similar to [[firewall (networking)|firewalls]]. Like firewalls, ACLs could be subject to security regulations and standards such as [[PCI DSS]].\n\n=== SQL implementations ===\nACL algorithms have been ported to [[SQL]] and to [[Relational database management system|relational database systems]]. Many \"modern\" (2000s and 2010s) [[SQL]]-based systems, like [[enterprise resource planning]] and [[Content management system|content management]] systems, have used ACL models in their administration modules.\n\n== Comparing with RBAC ==\nThe main alternative to the ACL model is the [[role-based access control|role-based access-control]] (RBAC) model.  A \"minimal RBAC model\", ''RBACm'', can be compared with an ACL mechanism, ''ACLg'', where only groups are permitted as entries in the ACL. Barkley (1997)<ref>J. Barkley (1997) \"[http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.107.6366  Comparing simple role based access control models and access control lists]\", In \"Proceedings of the second ACM workshop on Role-based access control\", pages 127-132.</ref> showed that ''RBACm'' and ''ACLg'' are equivalent.\n\nIn modern SQL implementations, ACLs also manage groups and inheritance in a hierarchy of groups. So \"modern ACLs\" can express all that RBAC express, and are notably powerful (compared to \"old ACLs\") in their ability to express access-control policy in terms of the way in which administrators view organizations.\n\nFor data interchange, and for \"high level comparisons\", ACL data can be translated to [[XACML]].<ref>G. Karjoth, A. Schade and E. Van Herreweghen (2008) \"[http://www.acsac.org/openconf2008/modules/request.php?module=oc_program&action=view.php&id=73 Implementing ACL-based Policies in XACML]\", In \"2008 Annual Computer Security Applications Conference\".</ref>\n\n== See also ==\n* [[Cacls]]\n* [[Capability-based security]]\n* [[C-list (computer security)|C-list]]\n* [[Confused deputy problem]]\n* [[DACL]]\n* [[Extended file attributes]]\n* [[Role-based access control]] (RBAC)\n\n== References ==\n{{Reflist}}\n\n== Further reading ==\n{{refbegin}}\n* {{cite web\n| url = https://www.freebsd.org/doc/en/books/handbook/fs-acl.html\n| title=File System Access Control Lists (ACLs)\n| work=FreeBSD Handbook\n| first=Tom\n| last=Rhodes\n| accessdate=2013-04-08\n}}\n* {{cite web\n|url = https://www.cs.virginia.edu/~jcg8f/GrsecuritySELinuxCaseStudy.pdf \n |title = SELinux and grsecurity: A Case Study Comparing Linux Security Kernel Enhancements \n |author1=Michael Fox \n |author2=John Giordano \n |author3=Lori Stotler \n |author4=Arun Thomas \n |publisher=[[University of Virginia]] \n |date=2005-08-24 \n |accessdate=2013-04-08 \n |url-status=dead \n |archiveurl = https://web.archive.org/web/20120224213801/http://www.cs.virginia.edu/~jcg8f/GrsecuritySELinuxCaseStudy.pdf \n |archivedate=2012-02-24 \n}}\n* {{cite web\n| url=http://www.cs.uiuc.edu/class/fa05/cs498sh/seclab/slides/OSNotes.ppt\n| title=Operating System Security\n| first=Susan\n| last=Hinrichs\n| year=2005\n| work=CyberSecurity Spring 2005\n| publisher=[[University of Illinois]]\n| accessdate=2013-04-08\n| archive-url=https://web.archive.org/web/20120304040752/http://www.cs.uiuc.edu/class/fa05/cs498sh/seclab/slides/OSNotes.ppt\n| archive-date=2012-03-04\n| url-status=dead\n}}\n* {{cite web\n| url = https://crypto.stanford.edu/cs155old/cs155-spring03/lecture9.pdf\n| title=Access Control and Operating System Security\n| first=John\n| last=Mitchell\n| publisher=[[Stanford University]]\n| accessdate=2013-04-08\n}}\n* {{cite web\n| url = https://www.cs.cornell.edu/courses/cs513/2007fa/NL.accessControl.html\n| title=Access Control\n| first=Michael\n| last=Clarkson\n| publisher=[[Cornell University]]\n| accessdate=2013-04-08\n}}\n* {{cite web\n| url = http://helgeklein.com/blog/2009/03/permissions-a-primer-or-dacl-sacl-owner-sid-and-ace-explained/\n| title=Permissions: A Primer, or: DACL, SACL, Owner, SID and ACE Explained\n| first=Helge\n| last=Klein\n| date=2009-03-12\n| accessdate=2013-04-08\n}}\n* {{cite web\n| url = http://msdn.microsoft.com/en-us/library/aa374872(VS.85).aspx\n| title=Access Control Lists\n| date=2012-10-26\n| publisher=[[MSDN Library]]\n| accessdate=2013-04-08\n}}\n* {{cite web\n| url = https://technet.microsoft.com/en-us/library/cc783530(WS.10).aspx\n| title=How Permissions Work\n| date=2003-03-28\n| publisher=[[Microsoft Technet]]\n| accessdate=2013-04-08\n}}\n{{refend}}\n\n{{DEFAULTSORT:Access Control List}}\n[[Category:Computer access control]]\n", "text_old": "An '''access-control list''' ('''ACL'''), with respect to a [[computer]] [[file system]], is a list of [[File system permissions|permissions]] attached to an [[Computer file|object]].  An ACL specifies which users or system processes are granted access to objects, as well as what operations are allowed on given objects.<ref>{{IETF RFC|4949}}</ref> Each entry in a typical ACL specifies a subject and an operation.  For instance, if a file object has an ACL that contains {{samp|(Alice: read,write; Bob: read)}}, this would give Alice permission to read and write the file and Bob to only read it.\n\n== Implementations ==\nMany kinds of operating systems implement ACLs, or have a historical implementation. The first time in the [[filesystem]] of [[Multics] in 1965.<ref>''Elementary Information Security'' by Richard E. Smith, p. 150</ref>\n\n=== Filesystem ACLs ===\nA filesystem ACL is a data structure (usually a table) containing entries that specify individual user or group rights to specific system objects such as programs, processes, or files. These entries are known as access-control entries (ACEs) in the [[Microsoft Windows NT]],<ref>{{cite web| url= https://technet.microsoft.com/en-us/library/bb457115.aspx| title=Managing Authorization and Access Control| date= 2005-11-03| publisher= [[Microsoft Technet]]| accessdate= 2013-04-08}}</ref> [[OpenVMS]], [[Unix-like]], and [[Mac OS X]] [[operating system]]s. Each accessible object contains an identifier to its ACL. The privileges or permissions determine specific access rights, such as whether a user can read from, write to, or [[execution (computing)|execute]] an object. In some implementations, an ACE can control whether or not a user, or group of users, may alter the ACL on an object. \n\n[[POSIX]] 1003.1e/1003.2c working group made an effort to standardize ACLs, resulting in what is now known as \"POSIX.1e ACL\" or simply \"POSIX ACL\".<ref>{{cite web |last1=Gr\u00fcnbacher |first1=Andreas |title=POSIX Access Control Lists on Linux |url=https://www.usenix.org/legacy/publications/library/proceedings/usenix03/tech/freenix03/full_papers/gruenbacher/gruenbacher_html/main.html |website=Usenix |accessdate=12 December 2019}}</ref> The POSIX.1e/POSIX.2c drafts were withdrawn in 1997 due to participants losing interest for funding the project and turning to more powerful alternatives such as NFSv4 ACL.<ref>{{cite web |last1=wurtzkurdle |title=Why was POSIX.1e withdrawn? |url=https://unix.stackexchange.com/a/506641 |website=Unix StackExchange |accessdate=12 December 2019}}</ref> {{As of|2019|12}}, no live sources of the draft could be found on the Internet, but it can still be found in the [[Internet Archive]].<ref>{{cite web |last1=Tr\u00fcmper |first1=Winfried |title=Summary about Posix.1e |url=https://wt.xpilot.org/publications/posix.1e/|archiveurl=https://web.archive.org/web/20080723061358/https://wt.xpilot.org/publications/posix.1e/ |archivedate=2008-07-23 |date=February 28, 1999}}</ref>\n\nMost of the Unix and Unix-like operating systems (e.g. [[Linux]] since 2.5.46 or November 2002,<ref>{{cite web| url= https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/3/html/Release_Notes/as-x86/index.html\n| title= Red Hat Enterprise Linux AS 3 Release Notes (x86 Edition)| quote= EA (Extended Attributes) and ACL (Access Control Lists) functionality is now available for ext3 file systems. In addition, ACL functionality is available for NFS.| year= 2003| publisher= [[Red Hat]]| accessdate= 2013-04-08}}</ref> [[BSD]], or [[Solaris (operating system)|Solaris]]) support POSIX.1e ACLs (not necessarily draft 17). Many of them, for example [[AIX]], [[FreeBSD]],<ref>{{cite web| url= https://wiki.freebsd.org/NFSv4_ACLs| title= NFSv4 ACLs| date= 2011-09-12| publisher= [[FreeBSD]]| accessdate= 2013-04-08}}</ref> [[Mac OS X]] beginning with version 10.4 (\"[[Mac OS X Tiger|Tiger]]\"), or [[Solaris (operating system)|Solaris]] with [[ZFS]] filesystem,<ref>{{cite web| url= http://docs.oracle.com/cd/E19082-01/817-2271/ftyxi/index.html| title= Chapter 8 Using ACLs and Attributes to Protect ZFS Files| publisher= [[Oracle Corporation]]| date= 2009-10-01| accessdate= 2013-04-08}}</ref> support [[NFSv4]] ACLs, which are part of the NFSv4 standard. There are two experimental implementations of NFSv4 ACLs for Linux: NFSv4 ACLs support for [[Ext3]] filesystem<ref>{{cite web| url= http://users.suse.com/~agruen/nfs4acl/| title= Native NFSv4 ACLs on Linux| first= Andreas| last= Gr\u00fcnbacher| date= May 2008| publisher= [[SUSE]]| archive-url= https://web.archive.org/web/20130620012339/http://users.suse.com/~agruen/nfs4acl/| archive-date= 2013-06-20| url-status= dead| accessdate= 2013-04-08}}</ref> and the more recent [[Richacls]] which brings NFSv4 ACLs support for [[Ext4]] filesystem.<ref>{{cite web| url=http://www.bestbits.at/richacl/| title=Richacls - Native NFSv4 ACLs on Linux| first=Andreas| last=Gr\u00fcnbacher| date=July\u2013September 2010| publisher=bestbits.at| accessdate=2013-04-08| archive-url=https://web.archive.org/web/20130320080142/http://www.bestbits.at/richacl/| archive-date=2013-03-20| url-status=dead}}</ref> ACLs are usually stored in the extended attributes of a file on these systems.\n\n[[PRIMOS]] featured ACLs at least as early as 1984.<ref>{{cite news| date = 1984-05-21| title= P.S.I. Pacer Software, Inc. Gnet-II revision 3.0| url  = https://books.google.com/books?id=KAUpSdv4AO4C| department            = Communications| work = Computerworld| volume= 18| issue= 21| page = 54| issn = 0010-4841| access-date= 2017-06-30| quote= The new version of Gnet-II (revision 3.0) has added a line-security mechanism which is implemented under the Primos ACL subsystem.}}</ref>\n\nIn the 1990s the ACL and [[Role-based access control|RBAC]] models were extensively tested{{by whom?|date=June 2017}} and used to administer file permissions.\n\n=== Active Directory ACLs ===\n\nMicrosoft's [[Active Directory]] Directory Service implements an [[LDAP]] server that store and disseminate configuration information about users and computers in a domain.<ref>{{cite web|title=[MS-ADTS]: Active Directory Technical Specification|url=https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-adts/d2435927-0999-4c62-8c6d-13ba31a52e1a}}</ref> Active Directory extends the LDAP specification by adding the same type of access-control list mechanism as Windows NT uses for the NTFS filesystem. Windows 2000 then extended the syntax for access control entries such that they could not only grant or deny access to entire LDAP objects, but also to individual attributes within these objects.<ref>{{cite journal|last=Swift|first=Michael M.|title=Improving the granularity of access control for Windows 2000|journal=ACM Transactions on Information and System Security (Tissec)|volume=5|issue=4|pages=398\u2013437|date=November 2002|doi=10.1145/581271.581273}}</ref>\n\n=== Networking ACLs ===\nOn some types of proprietary computer-hardware (in particular [[router (computing)|routers]] and [[Network switch|switches]]), an access-control list provides rules that are applied to [[TCP and UDP port|port numbers]] or [[Ip address|IP addresses]] that are available on a [[server (computing)|host]] or other [[Network Layer|layer 3]], each with a list of hosts and/or networks permitted to use the service. Although it is additionally possible to configure access-control lists based on network domain names, this is a questionable idea because individual [[Transmission_Control_Protocol|TCP]], [[User_Datagram_Protocol|UDP]], and [[Internet_Control_Message_Protocol|ICMP]] headers do not contain domain names. Consequently, the device enforcing the access-control list must separately [[Name_resolution_(computer_systems)|resolve names]] to numeric addresses. This presents an additional [[attack surface]] for an attacker who is seeking to compromise security of the system which the access-control list is protecting. Both individual [[server (computing)|servers]] as well as [[router (computing)|routers]] can have network ACLs. Access-control lists can generally be configured to control both inbound and outbound traffic, and in this context they are similar to [[firewall (networking)|firewalls]]. Like firewalls, ACLs could be subject to security regulations and standards such as [[PCI DSS]].\n\n=== SQL implementations ===\nACL algorithms have been ported to [[SQL]] and to [[Relational database management system|relational database systems]]. Many \"modern\" (2000s and 2010s) [[SQL]]-based systems, like [[enterprise resource planning]] and [[Content management system|content management]] systems, have used ACL models in their administration modules.\n\n== Comparing with RBAC ==\nThe main alternative to the ACL model is the [[role-based access control|role-based access-control]] (RBAC) model.  A \"minimal RBAC model\", ''RBACm'', can be compared with an ACL mechanism, ''ACLg'', where only groups are permitted as entries in the ACL. Barkley (1997)<ref>J. Barkley (1997) \"[http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.107.6366  Comparing simple role based access control models and access control lists]\", In \"Proceedings of the second ACM workshop on Role-based access control\", pages 127-132.</ref> showed that ''RBACm'' and ''ACLg'' are equivalent.\n\nIn modern SQL implementations, ACLs also manage groups and inheritance in a hierarchy of groups. So \"modern ACLs\" can express all that RBAC express, and are notably powerful (compared to \"old ACLs\") in their ability to express access-control policy in terms of the way in which administrators view organizations.\n\nFor data interchange, and for \"high level comparisons\", ACL data can be translated to [[XACML]].<ref>G. Karjoth, A. Schade and E. Van Herreweghen (2008) \"[http://www.acsac.org/openconf2008/modules/request.php?module=oc_program&action=view.php&id=73 Implementing ACL-based Policies in XACML]\", In \"2008 Annual Computer Security Applications Conference\".</ref>\n\n== See also ==\n* [[Cacls]]\n* [[Capability-based security]]\n* [[C-list (computer security)|C-list]]\n* [[Confused deputy problem]]\n* [[DACL]]\n* [[Extended file attributes]]\n* [[Role-based access control]] (RBAC)\n\n== References ==\n{{Reflist}}\n\n== Further reading ==\n{{refbegin}}\n* {{cite web\n| url = https://www.freebsd.org/doc/en/books/handbook/fs-acl.html\n| title=File System Access Control Lists (ACLs)\n| work=FreeBSD Handbook\n| first=Tom\n| last=Rhodes\n| accessdate=2013-04-08\n}}\n* {{cite web\n|url = https://www.cs.virginia.edu/~jcg8f/GrsecuritySELinuxCaseStudy.pdf \n |title = SELinux and grsecurity: A Case Study Comparing Linux Security Kernel Enhancements \n |author1=Michael Fox \n |author2=John Giordano \n |author3=Lori Stotler \n |author4=Arun Thomas \n |publisher=[[University of Virginia]] \n |date=2005-08-24 \n |accessdate=2013-04-08 \n |url-status=dead \n |archiveurl = https://web.archive.org/web/20120224213801/http://www.cs.virginia.edu/~jcg8f/GrsecuritySELinuxCaseStudy.pdf \n |archivedate=2012-02-24 \n}}\n* {{cite web\n| url=http://www.cs.uiuc.edu/class/fa05/cs498sh/seclab/slides/OSNotes.ppt\n| title=Operating System Security\n| first=Susan\n| last=Hinrichs\n| year=2005\n| work=CyberSecurity Spring 2005\n| publisher=[[University of Illinois]]\n| accessdate=2013-04-08\n| archive-url=https://web.archive.org/web/20120304040752/http://www.cs.uiuc.edu/class/fa05/cs498sh/seclab/slides/OSNotes.ppt\n| archive-date=2012-03-04\n| url-status=dead\n}}\n* {{cite web\n| url = https://crypto.stanford.edu/cs155old/cs155-spring03/lecture9.pdf\n| title=Access Control and Operating System Security\n| first=John\n| last=Mitchell\n| publisher=[[Stanford University]]\n| accessdate=2013-04-08\n}}\n* {{cite web\n| url = https://www.cs.cornell.edu/courses/cs513/2007fa/NL.accessControl.html\n| title=Access Control\n| first=Michael\n| last=Clarkson\n| publisher=[[Cornell University]]\n| accessdate=2013-04-08\n}}\n* {{cite web\n| url = http://helgeklein.com/blog/2009/03/permissions-a-primer-or-dacl-sacl-owner-sid-and-ace-explained/\n| title=Permissions: A Primer, or: DACL, SACL, Owner, SID and ACE Explained\n| first=Helge\n| last=Klein\n| date=2009-03-12\n| accessdate=2013-04-08\n}}\n* {{cite web\n| url = http://msdn.microsoft.com/en-us/library/aa374872(VS.85).aspx\n| title=Access Control Lists\n| date=2012-10-26\n| publisher=[[MSDN Library]]\n| accessdate=2013-04-08\n}}\n* {{cite web\n| url = https://technet.microsoft.com/en-us/library/cc783530(WS.10).aspx\n| title=How Permissions Work\n| date=2003-03-28\n| publisher=[[Microsoft Technet]]\n| accessdate=2013-04-08\n}}\n{{refend}}\n\n{{DEFAULTSORT:Access Control List}}\n[[Category:Computer access control]]\n", "name_user": "Polluks", "label": "safe", "comment": "\u2192\u200eImplementations", "url_page": "//en.wikipedia.org/wiki/Access-control_list"}
